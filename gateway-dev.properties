server.port={cipher}{key:config-service-key}AQBEY6aB3GqY9Y2cJKs/2kn9d2ROtATD4KEjiTn2vLslSUEEq7U9BslI3rB+pok1oeHG0DeSktDkJUWL8J5XeR4jo6znZ6ZTbU+h96rVDWBHC9VE9frh2u3dvxbxAhzPghetAqVASSgVwW9BCVR88pmqkMUs/IveN0G2Sgiz0ykyywVLpq6xYUisKmnIRPCWx7nhFez7velB6AckkGx+uBxE0dC9fAfnPhgyUd8w6B9PAm+/hRzd3ofVr6x98rbJejMuRZr0J753DT+NqhHKdG2DtnmfaulfLDz/GOI+jQpOPjKMj7PvXN5QFPpxhLki+aeLxpBb94xiFni5IYbIeqgSrLTE87kmmjelF7yVtBhy0ZwXGRt81OuQyAbfAIYRUUE=

spring.cloud.gateway.routes[0].id=weatherModule
spring.cloud.gateway.routes[0].uri=lb://search
spring.cloud.gateway.routes[0].predicates[0]=Path=/weather/**

spring.cloud.gateway.routes[1].id=detailsModule
spring.cloud.gateway.routes[1].uri=lb://details
spring.cloud.gateway.routes[1].predicates[0]=Path=/details/**
#spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1

spring.cloud.gateway.routes[2].id=universityModule
spring.cloud.gateway.routes[2].uri=lb://university
spring.cloud.gateway.routes[2].predicates[0]=Path=/university/**

spring.cloud.gateway.routes[3].id=libraryModule
spring.cloud.gateway.routes[3].uri=lb://library
spring.cloud.gateway.routes[3].predicates[0]=Path=/library/**

spring.cloud.gateway.routes[4].id=securityModule
spring.cloud.gateway.routes[4].uri=lb://security
spring.cloud.gateway.routes[4].predicates[0]=Path=/security/**

spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

myservice.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
#eureka.client.registryFetchIntervalSeconds=xx
#ribbon.ServerListRefreshInterval

#actuator endpoint
management.endpoints.web.exposure.include=*

#indicates the frequency the client sends heartbeat to server to indicate that it is alive.
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.client.serviceUrl.defaultZone={cipher}{key:config-service-key}AQAYrQ2Gxv9oYBil/+coy9rKRx2gPFlFd/ggdLiskLD9qzXn3tgs0xYG65j0bGhUxz1nwej1e9ioHb654xChBc1J/7P+zEL5PhnEuGiKag0mNwK6rmUp2rl1MjIjUIK2u5nE4jrgVwdXkBF8Z0XB2fIVGFL6S/AhlDzdMlEx8jMm4GL47jzlWqqVxbBsPBNqTCcgU09XClcB4/jDJNE6F+0jADbtCyD7nelU8G96prU4eDIJI0URYGBeK9VOy0j8CUFl/Rl+PbxvdMotxTO2elgSWP/1CE/atz4l2YG4AoYHPmQuEseqjQqZfct0ge6eqbL7ZhP6r9jffwjkO7Hy+qtkrJb6LJ5iXfBDrbDJ4nBa07qBTSIPRKJy/Bhqd9u+2KRijlErPcMWNeI1LgCcbjDS